{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport homePageReducer from \"./containers/HomePage/slice\";\nimport reduxLogger from \"redux-logger\";\nexport const store = configureStore({\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(reduxLogger),\n  reducer: {\n    homePage: homePageReducer\n  }\n});","map":{"version":3,"sources":["/Users/dan/MERN/yourcar/yourcar_frontend/src/app/store.ts"],"names":["configureStore","homePageReducer","reduxLogger","store","middleware","getDefaultMiddleware","concat","reducer","homePage"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAClCI,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BJ,WAA9B,CAFgC;AAGlCK,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEP;AADH;AAHyB,CAAD,CAA5B","sourcesContent":["import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport homePageReducer from \"./containers/HomePage/slice\";\nimport reduxLogger from \"redux-logger\";\n\nexport const store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(reduxLogger),\n  reducer: {\n    homePage: homePageReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"]},"metadata":{},"sourceType":"module"}